package ar.edu.unlam;

import static org.junit.Assert.*;

import org.junit.Test;

public class TestSistema {

	@Test
	public void queSePuedaCrearUnSistema() {
		final String nombreDelSistema = "GM2";
		final Integer cantidadMaximaDeUsuarios = 5;
		
		Sistema GM2 = new Sistema(nombreDelSistema, cantidadMaximaDeUsuarios);
		
		assertNotNull(GM2);
	}
	
	@Test
	public void queSeEsteGuardandoBienElNombreDelSistema() {
		final String NOMBRE_DEL_SISTEMA_ESPERADO = "GM2";
		final Integer cantidadMaximaDeUsuarios = 5;
		
		Sistema GM2 = new Sistema("GM2", cantidadMaximaDeUsuarios);
		
		assertEquals(GM2.getNombreDelSistema(), NOMBRE_DEL_SISTEMA_ESPERADO);
	}

	@Test
	public void queSePuedaAgregarUnUsuarioAlSistema() {
		Usuario mati = new Usuario("matias1");

		Sistema GM2 = new Sistema("GM2", 3);

		assertTrue(GM2.agregarUsuario(mati));
		
	}
	
	@Test
	public void queNoSePuedaIngresarUnUsuarioAlSistemaConElMismoNombreQueOtroUsuario() {
		Usuario mati = new Usuario("matias1");
		Usuario mati2 = new Usuario("matias1");
		Usuario mati3 = new Usuario("matias3");
		Sistema GM2 = new Sistema("GM2", 3);
		GM2.agregarUsuario(mati3);
		GM2.agregarUsuario(mati2);
		assertFalse(GM2.agregarUsuario(mati));
	}
	
	@Test
	public void queSePuedaCalcularLaCantidadDeUsuariosLogueadosCorrectamente() {
		final Integer CANTIDAD_DE_USUARIOS_LOGUEADOS = 0;
		Usuario mati = new Usuario("matias1");
		Usuario mati2 = new Usuario("matias1");
		Usuario mati3 = new Usuario("matias3");
		Sistema GM2 = new Sistema("GM2", 3);
		GM2.agregarUsuario(mati);
		GM2.agregarUsuario(mati3);
		GM2.agregarUsuario(mati2);
		
		assertEquals(GM2.getCantidadDeUsuariosLogueados(), 3);
	}
	

}
